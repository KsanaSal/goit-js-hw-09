{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGe,MAATC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASG,iBAAiB,SAClCC,EAAQJ,SAASG,iBAAiB,SAClCE,EAAaL,SAASC,cAAc,qBACpCK,EAAYN,SAASC,cAAc,oBACnCM,EAAcP,SAASC,cAAc,sBACrCO,EAAMR,SAASC,cAAc,UAGjBF,EAAbU,MAAMC,QAAU,OACrBX,EAAKU,MAAME,WAAa,WACxBT,EAAMU,SAAQC,IACZA,EAAGJ,MAAMC,QAAU,WAErBN,EAAMQ,SAAQC,IACZA,EAAGJ,MAAMK,OAAS,YAEpBN,EAAIC,MAAMM,OAAS,OAGRhB,EAANiB,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,GAAKZ,EAAYa,cAAeD,GAAK,EAAG,CACtD,IAAIE,EAAQhB,EAAWe,eAAiBD,EAAI,GAAKb,EAAUc,cAC3DE,YAAW,KAaf,IAAuBC,EAAUC,GAAVD,EAZHJ,EAYaK,EAZVH,EAad,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,QAjBhBO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjB3B,EAAAmC,OAAOC,QAAQ,uBAAqBV,QAAiBC,UAEtDU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClB3B,EAAAmC,OAAOG,QAAQ,sBAAoBZ,QAAiBC,YAEvDH","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Вибір елементів з html\nconst form = document.querySelector('.form');\nconst input = document.querySelectorAll('input');\nconst label = document.querySelectorAll('label');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst btn = document.querySelector('button');\n\n// Встановлення стилів\nform.style.display = 'flex';\nform.style.alignItems = 'flex-end';\ninput.forEach(el => {\n  el.style.display = 'block';\n});\nlabel.forEach(el => {\n  el.style.margin = '0 10px';\n});\nbtn.style.height = '22px';\n\n// Слухач форми\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  for (let i = 1; i <= inputAmount.valueAsNumber; i += 1) {\n    let delay = inputDelay.valueAsNumber + (i - 1) * inputStep.valueAsNumber;\n    setTimeout(() => {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n});\n\n// promise функція\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$input","querySelectorAll","$47d4ff9957288465$var$label","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btn","style","display","alignItems","forEach","el","margin","height","addEventListener","e","preventDefault","i","valueAsNumber","delay1","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.5d838eaa.js.map"}